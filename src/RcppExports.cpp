// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// VGA
NumericMatrix VGA(NumericVector t);
RcppExport SEXP _NVG_VGA(SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(VGA(t));
    return rcpp_result_gen;
END_RCPP
}
// phase_space
NumericMatrix phase_space(NumericVector x, int m, int tau);
RcppExport SEXP _NVG_phase_space(SEXP xSEXP, SEXP mSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(phase_space(x, m, tau));
    return rcpp_result_gen;
END_RCPP
}
// vvga
NumericMatrix vvga(NumericMatrix v);
RcppExport SEXP _NVG_vvga(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(vvga(v));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NVG_VGA", (DL_FUNC) &_NVG_VGA, 1},
    {"_NVG_phase_space", (DL_FUNC) &_NVG_phase_space, 3},
    {"_NVG_vvga", (DL_FUNC) &_NVG_vvga, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_NVG(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
